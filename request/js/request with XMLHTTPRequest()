//POST Request

const request = new XMLHttpRequest(); //создаем объект XMLHttpRequest();

        request.open('POST', 'server.php'); //request.open(method, url, async, login, password); - метод .open открывает соединение с сервером в котором мы заносим параметры запроса.
        /*Method - записывает тип запроса 'GET' или 'POST'.
        Url - адрес запроса. Путь формируется относительно файла HTML.
        Async - асинхронный или нет запрос.
        login, password - логин и пароль запроса.*/
               
        request.setRequestHeader( 'Content-type', 'application/json'); // пишем заголовок запроса в которой указали тип файла контента и кодировку HTML.

        const formData = new FormData(form); /*Когда мы используем связку XMLHttpRequest и FormData то заголок использовать 
         ненужно он прописывается автоматически, но это если мы в обычном формате делаем запрос если JSON то надо.*/

       const object = {}; // объект для POST запроса

        formData.forEach((value, key) => { // Перевод обычного формата FormData в формат JSON. 
            object[key] = value;  
        });

        const json = JSON.stringify(object); 
        
        request.send(json);


        /*Свойства request:
        request.status - показывает статус запроса(цифровой)
        request.statusText - показывает статус запроса(описанный словами)
        request.response - ответ нашего запроса
        request.readyState - статус запроса(ниже приведена таблица)*/

        request.addEventListener('load', () => { // - не отслеживает состояние а выводит итоговое значение ответа от сервера.
        /*request.addEventListener('readystatechange', () => {}) - данное событие отслеживает состояние нашего запроса на данный момент. Мы же не знаем когда нам ответит сервер.*/    
            
                if (request.status === 200) {
                console.log(request.response);
                showThanksModal(message.success);    
                form.reset(); // сбрасываем форму.
                statusMessage.remove();
                
            } else {
                showThanksModal(message.failure);
            }
        });
